# _GO_IF_HOMED X=<value> Y=<value> Z=<value> SPEED=<value> MODE="absolute" or "relative"
[gcode_macro _GO_IF_HOMED]
variable_default_mode: "absolute"
gcode:
  {% set defaults = printer["gcode_macro _VARIABLE_DEFAULTS"] %}
  {% if params.X or params.Y or params.Z %}
    {% if params.X %}
      {% set x = params.X|float %}
    {% else %}
      {% set x = "~" %}
    {% endif %}
    {% if params.Y %}
      {% set y = params.Y|float %}
    {% else %}
      {% set y = "~" %}
    {% endif %}
    {% if params.Z %}
      {% set z = params.Z|float %}
    {% else %}
      {% set z = "~" %}
    {% endif %}
    {% if printer.toolhead.homed_axes == "xyz" or printer.toolhead.homed_axes == "xzy" or printer.toolhead.homed_axes == "yxz" or printer.toolhead.homed_axes == "yzx"  or printer.toolhead.homed_axes == "zxy" or printer.toolhead.homed_axes == "zyx" %}
        {% set xy_travel_speed = params.SPEED|default(defaults.xy_travel_speed)|float %} # used only for moves without Z
        {% set z_travel_speed = [params.SPEED|default(defaults.z_travel_speed)|float, printer.configfile.settings.printer.max_z_velocity|float]|min %} # used for moves with Z
        {% set mode = params.MODE|default(default_mode) %}
        {% if mode == "relative" or mode == "absolute" %}
            SAVE_GCODE_STATE NAME=gcodeState__GO_IF_HOMED
            {% if mode == "relative" %}
              G91
            {% else %}
              G90
            {% endif %}
            {% if x != "~" and y != "~" and z != "~" %}
              G0 X{x} Y{y} Z{z} F{z_travel_speed*60}
            {% elif x != "~" and y != "~" %}
              G0 X{x} Y{y} F{xy_travel_speed*60}
            {% elif x != "~" and z != "~" %}
              G0 X{x} Z{z} F{z_travel_speed*60}
            {% elif y != "~" and z != "~" %}
              G0 Y{y} Z{z} F{z_travel_speed*60}
            {% elif x != "~" %}
              G0 X{x} F{xy_travel_speed*60}
            {% elif y != "~" %}
              G0 Y{y} F{xy_travel_speed*60}
            {% elif z != "~" %}
              G0 Z{z} F{z_travel_speed*60}
            {% endif %}
            RESTORE_GCODE_STATE NAME=gcodeState__GO_IF_HOMED
        {% else %}
            RESPOND TYPE=error MSG="_GO_IF_HOMED Invalid mode, must be 'absolute' or 'relative'."
        {% endif %}
    {% else %}
        RESPOND TYPE=error MSG="_GO_IF_HOMED Cannot go to [{x}, {y}, {z}], toolhead not homed on all axis."
    {% endif %}
  {% else %}
    RESPOND TYPE=error MSG="_GO_IF_HOMED Missing parameters."
  {% endif %}
description: "Go to a specific point if the toolhead is homed on all axis. Otherwise do nothing."

# _GO X=<value> Y=<value> Z=<value> SPEED=<value> MODE="absolute" | "relative"
[gcode_macro _GO]
gcode:
  SMART_HOME
  _GO_IF_HOMED {rawparams}
description: "Go to a specific point. If the toolhead in not homed on all axis, it will home before."


# _EXTRUDE_IF_HOT LENGTH=<value> SPEED=<value>
[gcode_macro _EXTRUDE_IF_HOT]
gcode:
  {% if printer.toolhead.extruder != '' %}
    {% if printer[printer.toolhead.extruder].can_extrude %}
      {% if params.LENGTH and params.SPEED %}
        {% set lenght = params.LENGTH|float %}
        {% set speed = params.SPEED|float|abs %}
        SAVE_GCODE_STATE NAME=gcodeState__EXTRUDE
        M83
        G1 E{lenght} F{speed*60}
        RESTORE_GCODE_STATE NAME=gcodeState__EXTRUDE
      {% else %}
        {% if printer.configfile.settings.firmware_retraction %}
          {% if params.LENGTH and params.LENGTH|float < 0 %}
            G10
          {% else %}
            G11
          {% endif %}
        {% else %}
          RESPOND TYPE=error MSG="_EXTRUDE_IF_HOT Missing parameters"
        {% endif %}
      {% endif %}
    {% else %}
      RESPOND TYPE=error MSG="_EXTRUDE_IF_HOT {printer.toolhead.extruder} not hot enough"
    {% endif %}
  {% else %}
    RESPOND TYPE=error MSG="_EXTRUDE_IF_HOT No extruder defined"
  {% endif %}
description: "Extrude a specific amount of filament. For firmware_retraction do not set the speed and use a positive value for extrusion and negative for retraction."

# _RETRACT_IF_HOT LENGTH=<value> SPEED=<value>
[gcode_macro _RETRACT_IF_HOT]
gcode:
  {% if params.LENGTH and params.SPEED %}
    {% set lenght = params.LENGTH|float|abs %}
    {% set speed = params.SPEED|float|abs %}
    _EXTRUDE_IF_HOT LENGTH=-{lenght} SPEED={speed}
  {% else %}
    {% if printer.configfile.settings.firmware_retraction %}
      {% if params.LENGTH and params.LENGTH|float < 0 %}
        _EXTRUDE_IF_HOT
      {% else %}
        _EXTRUDE_IF_HOT LENGTH=-1
      {% endif %}
    {% else %}
      RESPOND TYPE=error MSG="_RETRACT_IF_HOT Missing parameters"
    {% endif %}
  {% endif %}
description: "Retract a specific amount of filament. For firmware_retraction do not set the speed and use a negative value for extrusion and positive for retraction."

# _WAIT_TEMP_EXTRUDE LENGTH=<value> SPEED=<value>
[gcode_macro _WAIT_TEMP_EXTRUDE]
gcode:
  {% if printer.toolhead.extruder != '' %}
    {% if printer[printer.toolhead.extruder].target > printer.configfile.settings[printer.toolhead.extruder].min_extrude_temp %}
      {% if not printer[printer.toolhead.extruder].can_extrude %}
        M117 Waiting for extruder to heat up...
        M109 S{printer[printer.toolhead.extruder].target}
      {% endif %}
      _EXTRUDE_IF_HOT {rawparams}
    {% else %}
      RESPOND TYPE=error MSG="_WAIT_TEMP_EXTRUDE Target temperature for {printer.toolhead.extruder} lower than min_extrude_temp"
    {% endif %}
  {% else %}
    RESPOND TYPE=error MSG="_WAIT_TEMP_EXTRUDE No extruder defined"
  {% endif %}
description: "Wait for the extruder to reach the target temperature and then extrude a specific amount of filament."

# _WAIT_TEMP_RETRACT LENGTH=<value> SPEED=<value>
[gcode_macro _WAIT_TEMP_RETRACT]
gcode:
  {% if printer.toolhead.extruder != '' %}
    {% if printer[printer.toolhead.extruder].target > printer.configfile.settings[printer.toolhead.extruder].min_extrude_temp %}
      {% if not printer[printer.toolhead.extruder].can_extrude %}
        M117 Waiting for extruder to heat up...
        M109 S{printer[printer.toolhead.extruder].target}
      {% endif %}
      _RETRACT_IF_HOT {rawparams}
    {% else %}
      RESPOND TYPE=error MSG="_WAIT_TEMP_RETRACT Target temperature for {printer.toolhead.extruder} lower than min_extrude_temp"
    {% endif %}
  {% else %}
    RESPOND TYPE=error MSG="_WAIT_TEMP_RETRACT No extruder defined"
  {% endif %}
description: "Wait for the extruder to reach the target temperature and then retract a specific amount of filament."
