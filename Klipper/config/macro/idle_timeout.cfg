[idle_timeout]
gcode:
    _IDLE_TIMEOUT
timeout: 600 # (in seconds)

[gcode_macro _IDLE_TIMEOUT]
variable_disable_idle_timeout: False
variable_timeout: 600 # (in seconds)
variable_park_x: 0.0
variable_park_y: 0.0
variable_park_dz: 5.0
gcode:
    {% if not printer["gcode_macro _IDLE_TIMEOUT"].disable_idle_timeout %}
        _GO_IF_HOMED z={park_dz} MODE="relative"
        _GO_IF_HOMED X={park_x} Y={park_y}
        TURN_OFF_HEATERS
        M84
        M107
    {% else %}
        RESPOND MSG="Idle timeout disabled."
        SET_IDLE_TIMEOUT TIMEOUT={timeout} KEEP_IDLE_TIMEOUT_DISABLED="True"
    {% endif %}
description: "Added disable idle timeout feature."

# SET_IDLE_TIMEOUT TIMEOUT=<value> KEEP_IDLE_TIMEOUT_DISABLED="True" or any other value for False
[gcode_macro SET_IDLE_TIMEOUT]
rename_existing: SET_IDLE_TIMEOUT_BASE
gcode:
    {% if params.TIMEOUT %}
        {% set timeout = params.TIMEOUT|float|abs %}
        SET_GCODE_VARIABLE MACRO=_IDLE_TIMEOUT VARIABLE=timeout VALUE={timeout}
        SET_IDLE_TIMEOUT_BASE TIMEOUT={timeout}
    {% endif %}
    {% if params.KEEP_IDLE_TIMEOUT_DISABLED and params.KEEP_IDLE_TIMEOUT_DISABLED == "True" %}
        _DISABLE_IDLE_TIMEOUT
    {% else %}
        _ENABLE_IDLE_TIMEOUT
    {% endif %}
description: "Intercept calls to SET_IDLE_TIMEOUT and set the timeout value. It will enable the idle timeout feature if not specified otherwise."

[gcode_macro _ENABLE_IDLE_TIMEOUT]
gcode:
    SET_GCODE_VARIABLE MACRO=_IDLE_TIMEOUT VARIABLE=disable_idle_timeout VALUE=False
description: "Enable the idle timeout feature."

[gcode_macro _DISABLE_IDLE_TIMEOUT]
gcode:
    SET_GCODE_VARIABLE MACRO=_IDLE_TIMEOUT VARIABLE=disable_idle_timeout VALUE=True
description: "Disable the idle timeout feature."